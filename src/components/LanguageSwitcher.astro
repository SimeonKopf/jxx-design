---
// src/components/LanguageSwitcher.astro - Ultra simple version that works
---

<div class="language-switcher relative z-[100]">
  <!-- Current Language Button -->
  <button 
    id="lang-toggle" 
    class="bg-white/10 backdrop-blur-sm border border-white/20 hover:bg-white/20 text-gray-700 hover:text-gray-900 px-4 py-3 rounded-full transition-all duration-300 text-sm font-medium epilogue flex items-center space-x-2 min-w-[90px] justify-center"
  >
    <span id="lang-display" class="epilogue font-medium">DE</span>
    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>
  
  <!-- Language Options -->
  <div id="lang-menu" class="absolute top-full mt-2 right-0 bg-white border border-gray-200 rounded-lg shadow-xl w-24 hidden z-[101]">
    <button 
      class="lang-btn w-full px-3 py-3 text-sm font-medium text-gray-700 hover:bg-gray-50 first:rounded-t-lg epilogue flex items-center justify-center space-x-1"
      data-lang="de"
    >
      <span>ðŸ‡©ðŸ‡ª</span>
      <span>DE</span>
    </button>
    <button 
      class="lang-btn w-full px-3 py-3 text-sm font-medium text-gray-700 hover:bg-gray-50 last:rounded-b-lg border-t border-gray-100 epilogue flex items-center justify-center space-x-1"
      data-lang="en"
    >
      <span>ðŸ‡¬ðŸ‡§</span>
      <span>EN</span>
    </button>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const toggle = document.getElementById('lang-toggle');
  const menu = document.getElementById('lang-menu');
  const display = document.getElementById('lang-display');
  const langBtns = document.querySelectorAll('.lang-btn');
  
  let currentLang = localStorage.getItem('jxx-language') || 'de';
  let isMenuOpen = false;
  
  // Update display
  function updateDisplay() {
    display.textContent = currentLang.toUpperCase();
    
    // Update button states
    langBtns.forEach(btn => {
      if (btn.dataset.lang === currentLang) {
        btn.classList.add('bg-blue-50', 'font-semibold');
      } else {
        btn.classList.remove('bg-blue-50', 'font-semibold');
      }
    });
  }
  
  // Show/hide menu
  function toggleMenu() {
    isMenuOpen = !isMenuOpen;
    if (isMenuOpen) {
      menu.classList.remove('hidden');
    } else {
      menu.classList.add('hidden');
    }
  }
  
  // Close menu
  function closeMenu() {
    isMenuOpen = false;
    menu.classList.add('hidden');
  }
  
  // Change language
  function setLanguage(lang) {
    currentLang = lang;
    localStorage.setItem('jxx-language', lang);
    updateDisplay();
    translatePage();
    closeMenu();
  }
  
  // Basic translation function
  function translatePage() {
    const translations = {
      de: {
        home: 'Startseite',
        artworks: 'Kunstwerke', 
        about: 'Ãœber mich',
        contact: 'Kontakt',
        galleryTitle: 'Kunstgalerie',
        aboutTitle: 'Ãœber mich',
        contactTitle: 'Kontakt aufnehmen',
        sold: 'Verkauft'
      },
      en: {
        home: 'Home',
        artworks: 'Artworks',
        about: 'About', 
        contact: 'Contact',
        galleryTitle: 'Art Gallery',
        aboutTitle: 'About Me',
        contactTitle: 'Get in Touch',
        sold: 'Sold'
      }
    };
    
    const t = translations[currentLang];
    
    // Navigation
    const nav = document.querySelector('nav');
    if (nav) {
      const homeLink = nav.querySelector('a[href="/"]');
      const artworksLink = nav.querySelector('a[href="/#artworks"]');
      const aboutLink = nav.querySelector('a[href="/#about"]');
      const contactLink = nav.querySelector('a[href="/#contact"]');
      
      if (homeLink) homeLink.textContent = t.home;
      if (artworksLink) artworksLink.textContent = t.artworks;
      if (aboutLink) aboutLink.textContent = t.about;
      if (contactLink) contactLink.textContent = t.contact;
    }
    
    // Page content
    document.querySelectorAll('[data-translate]').forEach(el => {
      const key = el.getAttribute('data-translate');
      if (t[key]) el.textContent = t[key];
    });
  }
  
  // Event listeners
  toggle.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    toggleMenu();
  });
  
  langBtns.forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      setLanguage(this.dataset.lang);
    });
  });
  
  // Close on outside click
  document.addEventListener('click', function(e) {
    if (!toggle.contains(e.target) && !menu.contains(e.target)) {
      closeMenu();
    }
  });
  
  // Initialize
  updateDisplay();
  translatePage();
});
</script>

<style>
.language-switcher {
  position: relative;
  z-index: 100;
}

.lang-btn:active {
  background-color: #f3f4f6 !important;
}

/* Mobile-specific styles */
@media (max-width: 768px) {
  #lang-toggle {
    min-height: 48px;
    padding: 12px 16px;
  }
  
  .lang-btn {
    min-height: 48px;
    padding: 12px 8px;
  }
}
</style>